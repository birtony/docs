@startuml
'https://plantuml.com/sequence-diagram

box Domain1 #White
actor "Service or\nAdmin User" as adminUser
participant Outbox
participant "Inbox\nResolver" as resolver
queue "orb.activity.outbox" as outboxQueue
database "Outbox\nDB" as outboxDB
participant "Activity\nHandler" as outboxHandler
end box

box DomainN
participant Inbox
queue "orb.activity.inbox" as inboxQueue
database "Inbox\nDB" as inboxDB
participant "Activity\nHandler" as inboxHandler
end box

adminUser -> Outbox: Post(activity)

activate Outbox
  Outbox -> Outbox: validate(activity)
  Outbox -> outboxQueue: Publish("broadcast",activity)
  activate outboxQueue
    outboxQueue --> Outbox: ok
deactivate Outbox

outboxQueue -> Outbox: ("broadcast",activity)

activate Outbox

Outbox -> outboxDB: Put(activity)
activate outboxDB
  outboxDB --> Outbox: ok
deactivate outboxDB

Outbox -> outboxHandler: activity
activate outboxHandler
  note over outboxHandler
    The outbox handler
    may perform additional
    steps, depending on the
    activity type.
  end note
  outboxHandler --> Outbox: ok
deactivate outboxHandler

Outbox -> resolver: Resolve URI's\nin activity's\n"to" field
activate resolver
resolver --> Outbox: results
deactivate resolver

loop For resultN in results
  alt No error in resultN
    note over outboxQueue
      A "deliver" message is published
      to the queue in order to deliver
      the activity to the target URI.
    end note
    Outbox -> outboxQueue: Publish("deliver",resultN.uri,activity)
    outboxQueue --> Outbox: ok
  else Transient error in resultN
    note over outboxQueue
      A transient error occurred
      while attempting to resolve
      the inbox of the target URI.
      A "resolve-and-deliver" message is
      published to the queue so that
      the resolve of the URI may
      be retried.
    end note
    Outbox -> outboxQueue: Publish("resolve-and-deliver",\nresultN.uri,activity)
    outboxQueue --> Outbox: ok
  else Persistent error in resultN. The URI will be skipped.
  end alt
end loop

Outbox --> outboxQueue: ACK

deactivate Outbox

deactivate Outbox

outboxQueue -> Outbox: ("resolve-and-deliver",uriN,activity)

activate Outbox

Outbox -> resolver: Resolve uriN
activate resolver
resolver --> Outbox: results
deactivate resolver

loop For resultN in results
  alt No error in resultN
    note over outboxQueue
      A "deliver" message is published
      to the queue in order to deliver
      the activity to the target URI.
    end note
    Outbox -> outboxQueue: Publish("deliver",resultN.uri,activity)
    outboxQueue --> Outbox: ok
    Outbox --> outboxQueue: ACK
  else Error in resultN
    note over outboxQueue
      An error occurred while attempting
      to resolve the inbox(es) of the target
      URI. A NACK is sent back to the queue
      so that the message may be retried
      according to the backoff and retry limits
      of the Pub/Sub subsystem.
    end note
    Outbox --> outboxQueue: NACK
  end alt
end loop

deactivate Outbox

outboxQueue -> Outbox: ("deliver",uriN,activity)

activate Outbox

Outbox -> Inbox: HTTP Post(uriN,activity)

activate Inbox

Inbox -> inboxQueue: Publish(activity)

activate inboxQueue

inboxQueue --> Inbox: ok

Inbox --> Outbox: ok

note over Outbox
 If the HTTP response from
 the target URI is not OK
 then a NACK is sent back to
 the queue and the target will
 be retried.
end note

deactivate Inbox

Outbox --> outboxQueue: ACK

deactivate Outbox

deactivate outboxQueue

inboxQueue -> Inbox: activity

activate Inbox

Inbox -> inboxDB: Put(activity)

activate inboxDB
  inboxDB --> Inbox: ok
deactivate inboxDB

Inbox -> Inbox: Authorize(activity)

Inbox -> inboxHandler: Handle(activity)

activate inboxHandler
inboxHandler --> Inbox: ok
deactivate inboxHandler

Inbox --> inboxQueue: ACK

deactivate inboxQueue

@enduml
